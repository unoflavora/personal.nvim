local ls = require 'luasnip'
local s = ls.snippet
local t = ls.text_node

return {
  s('import.form-popup-module', {
    t {
      'MatFormFieldModule,',
      'MatToolbar,',
      'MatDialogModule,',
      'FormsModule,',
      'MatInputModule,',
    },
  }),
  s('provideTransloco', {
    t { "providers: [provideTranslocoScope({ scope: 'internal/cnb', alias: 'CB' })]," },
  }),
  s('aleatris.jsonConfig', {
    t {
      'export const jsonConfig: IFormJsonConfig = {',
      "  name: 'employee-ot-manager-data',",
      "  buttonContainerClass: 'col-span-6 flex gap-5',",
      '  disabled: false,',
      '  fields: [',
      '    {',
      "      type: 'date-range',",
      "      action: '',",
      "      id: 'date',",
      "      label: 'DATE_RANGE',",
      '      options: [],',
      '      selected: new FormJsonDateRange(',
      '        DateTime.now().toString(),',
      '        DateTime.now().minus({ months: 1 }).toString()',
      '      ),',
      '    },',
      '    {',
      "      type: 'select',",
      "      action: '',",
      "      id: 'type',",
      "      selected: '1',",
      "      label: 'FILTER.APPROVAL_STATUS',",
      '      options: [',
      '        {',
      "          description: 'Waiting Approval',",
      "          id: '0',",
      '        },',
      '        {',
      "          description: 'Approved',",
      "          id: '1',",
      '        },',
      '        {',
      "          description: 'Rejected',",
      "          id: '2',",
      '        },',
      '      ],',
      '    },',
      '    {',
      "      type: 'text',",
      "      action: '',",
      "      id: 'search',",
      "      label: 'FILTER.NIKORNAME',",
      '      options: [],',
      '    },',
      '  ],',
      '};',
    },
  }),

  s('aleatris.component.table', {
    t {
      "import { Component, ViewChild } from '@angular/core';",
      "import TableView from '@apps/hcportal/shared/table-view.component';",
      "import CnbService from '@apps/hcportal/modules/main/cnb/shared/cnb.service';",
      "import { IManagerEmployeeOTData, jsonConfig } from './employee-ot.model';",
      'import {',
      '  AleatrisUiContentComponent,',
      '  AleatrisUiFormJsonComponent,',
      '  AleatrisUiFormJsonService,',
      '  AleatrisUiSpinnerComponent,',
      '  FormJsonDateRange,',
      "} from '@aleatris/ui';",
      "import { MatButtonModule } from '@angular/material/button';",
      "import { MatPaginator, MatPaginatorModule } from '@angular/material/paginator';",
      "import { MatMenuModule } from '@angular/material/menu';",
      "import { MatTooltipModule } from '@angular/material/tooltip';",
      "import { MatIconModule } from '@angular/material/icon';",
      "import { MatCheckboxModule } from '@angular/material/checkbox';",
      "import { MatTableModule } from '@angular/material/table';",
      "import { TranslocoModule } from '@ngneat/transloco';",
      "import { CommonModule } from '@angular/common';",
      "import { take } from 'rxjs';",
      "import { DateTime } from 'luxon';",
      '',
      '@Component({',
      "  selector: 'hcportal-employee-ot',",
      '  standalone: true,',
      '  imports: [',
      '    CommonModule,',
      '    AleatrisUiContentComponent,',
      '    AleatrisUiFormJsonComponent,',
      '    TranslocoModule,',
      '    AleatrisUiSpinnerComponent,',
      '    MatTableModule,',
      '    MatCheckboxModule,',
      '    MatIconModule,',
      '    MatTooltipModule,',
      '    MatMenuModule,',
      '    MatPaginatorModule,',
      '    MatButtonModule,',
      '  ],',
      "  templateUrl: './employee-ot.component.html',",
      "  styleUrl: './employee-ot.component.css',",
      '})',
      'export class EmployeeOtComponent extends TableView<IManagerEmployeeOTData> {',
      '  @ViewChild(MatPaginator) paginator: MatPaginator;',
      '  listSelected: string[] = [];',
      '  get jsonConfig() {',
      '    return jsonConfig;',
      '  }',
      '',
      '  get displayedColumns() {',
      "    let column: (keyof IManagerEmployeeOTData | 'action')[] = [",
      "      'action',",
      "      'emp_ot',",
      "      'ot_type',",
      "      'ot_date',",
      "      'start_time',",
      "      'end_time',",
      "      'rest_hour',",
      "      'reason',",
      "      'approval_status',",
      '    ];',
      '    return column;',
      '  }',
      '',
      '  get headerNames() {',
      '    const headers: { [key: string]: string } = {',
      "      emp_ot: 'NIKNAME',",
      "      ot_type: 'TYPE',",
      "      ot_date: 'DATE',",
      "      start_time: 'START_TIME',",
      "      end_time: 'END_TIME',",
      "      rest_hour: 'REST_HOUR',",
      "      reason: 'REASON',",
      "      approval_status: 'STATUS',",
      '    };',
      '    return headers;',
      '  }',
      '',
      '  constructor(',
      '    service: YourService,',
      '    jsonService: AleatrisUiFormJsonService,',
      '    private cnbService: CnbService',
      '  ) {',
      '    super(jsonService, service);',
      '  }',
      '',
      '  ngOnInit() {',
      '    this.isLoading = true;',
      '  }',
      '',
      '  toggleCheck(id: string) {',
      '    if (this.listSelected.includes(id)) {',
      '      this.listSelected = this.listSelected.filter(s => s !== id);',
      '      return;',
      '    }',
      '',
      '    this.listSelected.push(id);',
      '  }',
      '',
      '  ngAfterViewInit() {',
      '    this.viewData(this.jsonConfig, this.paginator);',
      '  }',
      '  viewRejectionComment(data: IManagerEmployeeOTData) {',
      '    this.cnbService.viewComment(data.rejected_comment);',
      '  }',
      '',
      '  openPopup() {',
      '    this.cnbService',
      '      .openActionPopup(YourComponent, null, {',
      "        minWidth: '80%',",
      "        maxWidth: '1360px',",
      '      })',
      '      .pipe(take(1))',
      '      .subscribe(isSuccess => {',
      '        if (isSuccess) this.refreshData$.next();',
      '      });',
      '  }',
      '}',
    },
  }),
}
